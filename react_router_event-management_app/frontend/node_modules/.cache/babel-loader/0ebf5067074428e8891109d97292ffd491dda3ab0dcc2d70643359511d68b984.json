{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_router_event-management_app\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { EventsList } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const eventLoader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch event\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\n// browser execution and supports default browser features\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","eventLoader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_router_event-management_app/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\r\nimport { EventsList } from \"../components\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  const events = data.events;\r\n  return <EventsList events />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport const eventLoader = async () => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch event\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json(\r\n      { message: \"Could not fetch event\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\n// browser execution and supports default browser features\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC9B;AAACN,EAAA,CAJQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAY,EAAA,GADnBR,UAAU;AAMnB,eAAeA,UAAU;AAEzB,OAAO,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMjB,IAAI,CACR;MAAEkB,OAAO,EAAE;IAAwB,CAAC,EACpC;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AACD;AAAA,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}