{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_user-form-and-input_app\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\n\n// Email\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailRegx = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst validate = (value, check) => {\n  return check === \"isEmpty\" ? value.trim() !== \"\" : check === \"validEmail\" ? emailRegx.test(value.trim()) : false;\n};\nconst BasicForm = props => {\n  _s();\n  // FirstName\n  const {\n    value: firstNameValue,\n    isValid: enteredfirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    resetInput: resetfirstNameInput\n  } = useInput(value => validate(value, \"isEmpty\"));\n\n  // LastName\n  const {\n    value: lastNameValue,\n    isValid: enteredlastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    resetInput: resetlastNameInput\n  } = useInput(value => validate(value, \"isEmpty\"));\n\n  // Email\n  const {\n    value: emailValue,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emilChangeHandler,\n    inputBlurHandler: emilBlurHandler,\n    resetInput: resetEmilInput\n  } = useInput(value => validate(value, \"validEmail\"));\n  let fromIsValid = false;\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    fromIsValid = enteredEmailIsValid && enteredfirstNameIsValid && enteredlastNameIsValid ? true : false;\n    return fromIsValid ? resetEmilInput() && resetfirstNameInput && resetlastNameInput && console.log({\n      firstNameValue,\n      lastNameValue,\n      emailValue\n    }) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${\"form-control\"} ${firstNameInputHasError && \"invalid\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstname\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name mustn't be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${\"form-control\"} ${lastNameInputHasError && \"invalid\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastname\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name mustn't be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${\"form-control\"} ${emailInputHasError && \"invalid\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: emailValue,\n        onChange: emilChangeHandler,\n        onBlur: emilBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name mustn't be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !fromIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"p6XGGqj5uy8YEs8Kd1pmRGdDtFs=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","emailRegx","validate","value","check","trim","test","BasicForm","props","_s","firstNameValue","isValid","enteredfirstNameIsValid","hasError","firstNameInputHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","resetInput","resetfirstNameInput","lastNameValue","enteredlastNameIsValid","lastNameInputHasError","lastNameChangeHandler","lastNameBlurHandler","resetlastNameInput","emailValue","enteredEmailIsValid","emailInputHasError","emilChangeHandler","emilBlurHandler","resetEmilInput","fromIsValid","onSubmitHandler","event","preventDefault","console","log","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_user-form-and-input_app/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\n// Email\nconst emailRegx =\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\nconst validate = (value, check) => {\n  return check === \"isEmpty\"\n    ? value.trim() !== \"\"\n    : check === \"validEmail\"\n    ? emailRegx.test(value.trim())\n    : false;\n};\n\nconst BasicForm = (props) => {\n  // FirstName\n  const {\n    value: firstNameValue,\n    isValid: enteredfirstNameIsValid,\n    hasError: firstNameInputHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    resetInput: resetfirstNameInput,\n  } = useInput((value) => validate(value, \"isEmpty\"));\n\n  // LastName\n  const {\n    value: lastNameValue,\n    isValid: enteredlastNameIsValid,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    resetInput: resetlastNameInput,\n  } = useInput((value) => validate(value, \"isEmpty\"));\n\n  // Email\n  const {\n    value: emailValue,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emilChangeHandler,\n    inputBlurHandler: emilBlurHandler,\n    resetInput: resetEmilInput,\n  } = useInput((value) => validate(value, \"validEmail\"));\n\n  let fromIsValid = false;\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    fromIsValid =\n      enteredEmailIsValid && enteredfirstNameIsValid && enteredlastNameIsValid\n        ? true\n        : false;\n\n    return fromIsValid\n      ? resetEmilInput() &&\n          resetfirstNameInput &&\n          resetlastNameInput &&\n          console.log({ firstNameValue, lastNameValue, emailValue })\n      : null;\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className=\"control-group\">\n        <div\n          className={`${\"form-control\"} ${firstNameInputHasError && \"invalid\"}`}\n        >\n          <label htmlFor=\"firstname\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstname\"\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameInputHasError && (\n            <p className=\"error-text\">Name mustn't be empty</p>\n          )}\n        </div>\n        <div\n          className={`${\"form-control\"} ${lastNameInputHasError && \"invalid\"}`}\n        >\n          <label htmlFor=\"lastname\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastname\"\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">Name mustn't be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={`${\"form-control\"} ${emailInputHasError && \"invalid\"}`}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={emailValue}\n          onChange={emilChangeHandler}\n          onBlur={emilBlurHandler}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Name mustn't be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!fromIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}