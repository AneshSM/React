{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_user-form-and-input_app\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: nameValue,\n    hasError: nameError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== \"\");\n  const enteredNameIsValid = name.trim() !== \"\";\n  const nameIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  // email\n  const [email, setEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const emailRegx = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const enteredEmailIsValid = emailRegx.test(email.trim());\n  const emailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const inputHandler = event => {\n    event.target.id === \"name\" && setName(event.target.value);\n    event.target.id === \"email\" && setEmail(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    event.target.id === \"name\" && setEnteredNameTouched(true);\n    event.target.id === \"email\" && setEnteredEmailTouched(true);\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log(name);\n    console.log(email);\n    setName(\"\");\n    setEnteredNameTouched(false);\n    setEmail(\"\");\n    setEnteredEmailTouched(false);\n\n    // nameInputRef.current.value = \"\";     /* Manipulates the DOM directly */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameIsInvalid ? \"form-control invalid\" : \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandler,\n        onBlur: inputBlurHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name mustn't be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailIsInvalid ? \"form-control invalid\" : \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputHandler,\n        onBlur: inputBlurHandler,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), emailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"vi2sFhZEdDSHV1elyZol9DRbm5Q=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","nameValue","hasError","nameError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredNameIsValid","name","nameIsInvalid","enteredNameTouched","email","setEmail","enteredEmailTouched","setEnteredEmailTouched","emailRegx","enteredEmailIsValid","test","emailIsInvalid","formIsValid","inputHandler","event","target","id","setName","setEnteredNameTouched","onSubmitHandler","preventDefault","console","log","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_user-form-and-input_app/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: nameValue,\n    hasError: nameError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const enteredNameIsValid = name.trim() !== \"\";\n  const nameIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  // email\n  const [email, setEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const emailRegx =\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  const enteredEmailIsValid = emailRegx.test(email.trim());\n  const emailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const inputHandler = (event) => {\n    event.target.id === \"name\" && setName(event.target.value);\n    event.target.id === \"email\" && setEmail(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    event.target.id === \"name\" && setEnteredNameTouched(true);\n    event.target.id === \"email\" && setEnteredEmailTouched(true);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(name);\n    console.log(email);\n\n    setName(\"\");\n    setEnteredNameTouched(false);\n\n    setEmail(\"\");\n    setEnteredEmailTouched(false);\n\n    // nameInputRef.current.value = \"\";     /* Manipulates the DOM directly */\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={nameIsInvalid ? \"form-control invalid\" : \"form-control\"}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandler}\n          onBlur={inputBlurHandler}\n          value={name}\n        />\n        {nameIsInvalid && <p className=\"error-text\">Name mustn't be empty</p>}\n      </div>\n      <div className={emailIsInvalid ? \"form-control invalid\" : \"form-control\"}>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={inputHandler}\n          onBlur={inputBlurHandler}\n          value={email}\n        />\n        {emailIsInvalid && <p className=\"error-text\">Invalid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}