{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_user-form-and-input_app\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [name, setName] = useState(\"\");\n  const [nameInputIsValid, setNameInputIsValid] = useState(false);\n  const [nameInputTouched, setNameInputTouched] = useState(false);\n  const inputHandler = event => {\n    if (event.target.value.trim() !== \"\") {\n      setNameInputIsValid(true);\n    }\n    setName(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setNameInputTouched(true);\n    if (name.trim() === \"\") {\n      setNameInputIsValid(false);\n    }\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    setNameInputTouched(true);\n    if (name.trim() === \"\") {\n      setNameInputIsValid(false);\n      return;\n    }\n    setNameInputIsValid(true);\n    console.log(name);\n    setName(\"\");\n    // nameInputRef.current.value = \"\";     /* Manipulates the DOM directly */\n  };\n\n  const nameIsInvalid = !nameInputIsValid && nameInputTouched;\n  const validateStyle = nameIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: validateStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: inputHandler,\n        onBlur: inputBlurHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), nameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name mustn't be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"QGKg+l7Kp3NdD5+eQlxfPmBtbLw=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","nameInputRef","name","setName","nameInputIsValid","setNameInputIsValid","nameInputTouched","setNameInputTouched","inputHandler","event","target","value","trim","inputBlurHandler","onSubmitHandler","preventDefault","console","log","nameIsInvalid","validateStyle","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_user-form-and-input_app/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n\n  const [name, setName] = useState(\"\");\n  const [nameInputIsValid, setNameInputIsValid] = useState(false);\n  const [nameInputTouched, setNameInputTouched] = useState(false);\n\n  const inputHandler = (event) => {\n    if (event.target.value.trim() !== \"\") {\n      setNameInputIsValid(true);\n    }\n    setName(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setNameInputTouched(true);\n    if (name.trim() === \"\") {\n      setNameInputIsValid(false);\n    }\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setNameInputTouched(true);\n    if (name.trim() === \"\") {\n      setNameInputIsValid(false);\n      return;\n    }\n    setNameInputIsValid(true);\n    console.log(name);\n    setName(\"\");\n    // nameInputRef.current.value = \"\";     /* Manipulates the DOM directly */\n  };\n\n  const nameIsInvalid = !nameInputIsValid && nameInputTouched;\n  const validateStyle = nameIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={validateStyle}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={inputHandler}\n          onBlur={inputBlurHandler}\n          value={name}\n        />\n        {nameIsInvalid && <p className=\"error-text\">Name mustn't be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAGP,MAAM,EAAE;EAE7B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;MACpCP,mBAAmB,CAAC,IAAI,CAAC;IAC3B;IACAF,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAME,gBAAgB,GAAIJ,KAAK,IAAK;IAClCF,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAIL,IAAI,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MACtBP,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAMS,eAAe,GAAIL,KAAK,IAAK;IACjCA,KAAK,CAACM,cAAc,EAAE;IACtBR,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAIL,IAAI,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MACtBP,mBAAmB,CAAC,KAAK,CAAC;MAC1B;IACF;IACAA,mBAAmB,CAAC,IAAI,CAAC;IACzBW,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IACjBC,OAAO,CAAC,EAAE,CAAC;IACX;EACF,CAAC;;EAED,MAAMe,aAAa,GAAG,CAACd,gBAAgB,IAAIE,gBAAgB;EAC3D,MAAMa,aAAa,GAAGD,aAAa,GAAG,sBAAsB,GAAG,cAAc;EAE7E,oBACErB,OAAA;IAAMuB,QAAQ,EAAEN,eAAgB;IAAAO,QAAA,gBAC9BxB,OAAA;MAAKyB,SAAS,EAAEH,aAAc;MAAAE,QAAA,gBAC5BxB,OAAA;QAAO0B,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC9B,OAAA;QACE+B,GAAG,EAAE3B,YAAa;QAClB4B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAEvB,YAAa;QACvBwB,MAAM,EAAEnB,gBAAiB;QACzBF,KAAK,EAAET;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ,EACDT,aAAa,iBAAIrB,OAAA;QAAGyB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE,eACN9B,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BxB,OAAA;QAAAwB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC3B,EAAA,CAxDIF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}