{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_user-form-and-input_app\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  //Name\n  const {\n    value: nameValue,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    resetInput: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n\n  // Email\n  const emailRegx = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const {\n    value: emailValue,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emilChangeHandler,\n    inputBlurHandler: emilBlurHandler,\n    resetInput: resetEmilInput\n  } = useInput(value => emailRegx.test(value.trim()));\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log(name);\n    console.log(email);\n    resetNameInput();\n    resetEmilInput;\n\n    // nameInputRef.current.value = \"\";     /* Manipulates the DOM directly */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputHasError ? \"form-control invalid\" : \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: nameValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name mustn't be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputHasError ? \"form-control invalid\" : \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emilChangeHandler,\n        onBlur: emilBlurHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"iRmEexY8V8OGZywgUFvQDeLbGr0=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","nameValue","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","resetInput","resetNameInput","trim","emailRegx","emailValue","enteredEmailIsValid","emailInputHasError","emilChangeHandler","emilBlurHandler","resetEmilInput","test","formIsValid","onSubmitHandler","event","preventDefault","setEnteredNameTouched","console","log","name","email","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_user-form-and-input_app/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  //Name\n  const {\n    value: nameValue,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    resetInput: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  // Email\n  const emailRegx =\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  const {\n    value: emailValue,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emilChangeHandler,\n    inputBlurHandler: emilBlurHandler,\n    resetInput: resetEmilInput,\n  } = useInput((value) => emailRegx.test(value.trim()));\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(name);\n    console.log(email);\n\n    resetNameInput();\n    resetEmilInput;\n\n    // nameInputRef.current.value = \"\";     /* Manipulates the DOM directly */\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div\n        className={nameInputHasError ? \"form-control invalid\" : \"form-control\"}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={nameValue}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name mustn't be empty</p>\n        )}\n      </div>\n      <div\n        className={emailInputHasError ? \"form-control invalid\" : \"form-control\"}\n      >\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emilChangeHandler}\n          onBlur={emilBlurHandler}\n          value={emailValue}\n        />\n        {emailInputHasError && <p className=\"error-text\">Invalid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}