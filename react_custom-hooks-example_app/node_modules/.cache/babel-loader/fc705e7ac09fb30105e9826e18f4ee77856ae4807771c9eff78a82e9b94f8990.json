{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    const body = requestConfig.body === undefined ? {} : {\n      method: requestConfig.method ? requestConfig.method : \"GET\",\n      headers: requestConfig.headers ? requestConfig.headers : {},\n      body: JSON.stringify(requestConfig.body)\n    };\n    try {\n      const response = await fetch(requestConfig.url, body);\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","body","undefined","method","headers","JSON","stringify","response","fetch","url","ok","Error","data","json","err","message"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_custom-hooks-example_app/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = (applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(\r\n    async (requestConfig) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const body =\r\n        requestConfig.body === undefined\r\n          ? {}\r\n          : {\r\n              method: requestConfig.method ? requestConfig.method : \"GET\",\r\n              headers: requestConfig.headers ? requestConfig.headers : {},\r\n              body: JSON.stringify(requestConfig.body),\r\n            };\r\n      try {\r\n        const response = await fetch(requestConfig.url, body);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Request failed!\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        applyData(data);\r\n      } catch (err) {\r\n        setError(err.message || \"Something went wrong!\");\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [applyData]\r\n  );\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAC7B,MAAOU,aAAa,IAAK;IACvBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMG,IAAI,GACRD,aAAa,CAACC,IAAI,KAAKC,SAAS,GAC5B,CAAC,CAAC,GACF;MACEC,MAAM,EAAEH,aAAa,CAACG,MAAM,GAAGH,aAAa,CAACG,MAAM,GAAG,KAAK;MAC3DC,OAAO,EAAEJ,aAAa,CAACI,OAAO,GAAGJ,aAAa,CAACI,OAAO,GAAG,CAAC,CAAC;MAC3DH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACN,aAAa,CAACC,IAAI;IACzC,CAAC;IACP,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACR,aAAa,CAACS,GAAG,EAAER,IAAI,CAAC;MAErD,IAAI,CAACM,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAElCpB,SAAS,CAACmB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACH,SAAS,CAAC,CACZ;EACD,OAAO;IAAEE,SAAS;IAAEE,KAAK;IAAEE;EAAY,CAAC;AAC1C,CAAC;AAACL,EAAA,CAlCIF,OAAO;AAoCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}