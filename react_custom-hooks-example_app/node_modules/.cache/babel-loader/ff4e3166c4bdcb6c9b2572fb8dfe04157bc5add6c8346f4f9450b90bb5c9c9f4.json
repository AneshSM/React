{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_custom-hooks-example_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const fetchSupabase = async () => {\n    const supabase = await fetch(\"https://hjlbspttxhxvxmjwnafo.supabase.co\");\n    console.log(supabase);\n  };\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-6b4a6.firebaseio.com/tasks.json\");\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"47V/V/up9U9rSJyqYIMJNeWJ16w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tasks","NewTask","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","error","setError","tasks","setTasks","fetchSupabase","supabase","fetch","console","log","fetchTasks","taskText","response","ok","Error","data","json","loadedTasks","taskKey","push","id","text","err","message","taskAddHandler","task","prevTasks","concat","Fragment","children","onAddTask","fileName","_jsxFileName","lineNumber","columnNumber","items","loading","onFetch","_c","$RefreshReg$"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_custom-hooks-example_app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const fetchSupabase = async () => {\n    const supabase = await fetch(\"https://hjlbspttxhxvxmjwnafo.supabase.co\");\n    console.log(supabase);\n  };\n\n  const fetchTasks = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-6b4a6.firebaseio.com/tasks.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const loadedTasks = [];\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,OAAO,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC;IACxEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMI,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrCX,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAML,KAAK,CAC1B,oDAAoD,CACrD;MAED,IAAI,CAACK,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAElC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIH,IAAI,EAAE;QAC1BE,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEN,IAAI,CAACG,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MAC7D;MAEAjB,QAAQ,CAACa,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAvB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdmB,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,cAAc,GAAIC,IAAI,IAAK;IAC/BrB,QAAQ,CAAEsB,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,oBACE7B,OAAA,CAACN,KAAK,CAACsC,QAAQ;IAAAC,QAAA,gBACbjC,OAAA,CAACF,OAAO;MAACoC,SAAS,EAAEN;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtCtC,OAAA,CAACH,KAAK;MACJ0C,KAAK,EAAEhC,KAAM;MACbiC,OAAO,EAAErC,SAAU;MACnBE,KAAK,EAAEA,KAAM;MACboC,OAAO,EAAE3B;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACa;AAErB;AAACpC,EAAA,CAxDQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}