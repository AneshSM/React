{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    const body = requestConfig.body === undefined ? {} : {\n      method: requestConfig.method ? requestConfig.method : \"GET\",\n      headers: requestConfig.headers ? requestConfig.headers : {},\n      body: JSON.stringify(requestConfig.body)\n    };\n    try {\n      const response = await fetch(requestConfig.url, body);\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","body","undefined","method","headers","JSON","stringify","response","fetch","url","ok","Error","data","json","console","log","err","message"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_custom-hooks-example_app/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const body =\r\n      requestConfig.body === undefined\r\n        ? {}\r\n        : {\r\n            method: requestConfig.method ? requestConfig.method : \"GET\",\r\n            headers: requestConfig.headers ? requestConfig.headers : {},\r\n            body: JSON.stringify(requestConfig.body),\r\n          };\r\n\r\n    try {\r\n      const response = await fetch(requestConfig.url, body);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,WAAW,GAAGR,WAAW,CAAC,OAAOS,aAAa,EAAEC,SAAS,KAAK;IAClEL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMI,IAAI,GACRF,aAAa,CAACE,IAAI,KAAKC,SAAS,GAC5B,CAAC,CAAC,GACF;MACEC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;MAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;MAC3DH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACP,aAAa,CAACE,IAAI;IACzC,CAAC;IAEP,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACT,aAAa,CAACU,GAAG,EAAER,IAAI,CAAC;MAErD,IAAI,CAACM,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChBnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAtB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAED,SAAS;IAAEE,KAAK;IAAEE;EAAY,CAAC;AAC1C,CAAC;AAACL,EAAA,CAjCID,OAAO;AAmCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}