{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      state.totalQuantity--;\n      const existingItem = state.items.find(item => item.id === id);\n      console.log(existingItem);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotificaion({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart\"\n    }));\n    const sendCart = async () => {\n      dispatch(uiActions.showNotificaion({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart\"\n      }));\n      const response = await fetch(\"https://react-food-order-app-4a405-default-rtdb.asia-southeast1.firebasedatabase.app/reduxCart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) throw new Error(\"Sending cart datat failed!\");\n    };\n    try {\n      await sendCart;\n    } catch (error) {}\n    const data = await response.json();\n    dispatch(uiActions.showNotificaion({\n      status: \"success\",\n      title: \"Success\",\n      message: \"Sent cart data successfully!\"\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","totalPrice","removeItem","console","log","filter","sendCartData","cart","dispatch","showNotificaion","status","message","sendCart","response","fetch","method","body","JSON","stringify","ok","Error","error","data","json","cartActions","actions"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_redux-cart_app/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      state.totalQuantity--;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      console.log(existingItem);\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotificaion({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart\",\r\n      })\r\n    );\r\n    const sendCart = async () => {\r\n      dispatch(\r\n        uiActions.showNotificaion({\r\n          status: \"pending\",\r\n          title: \"Sending...\",\r\n          message: \"Sending cart\",\r\n        })\r\n      );\r\n      const response = await fetch(\r\n        \"https://react-food-order-app-4a405-default-rtdb.asia-southeast1.firebasedatabase.app/reduxCart.json\",\r\n        { method: \"PUT\", body: JSON.stringify(cart) }\r\n      );\r\n      if (!response.ok) throw new Error(\"Sending cart datat failed!\");\r\n    };\r\n    try {\r\n      await sendCart;\r\n    } catch (error) {}\r\n\r\n    const data = await response.json();\r\n    dispatch(\r\n      uiActions.showNotificaion({\r\n        status: \"success\",\r\n        title: \"Success\",\r\n        message: \"Sent cart data successfully!\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACO,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACnE;IACF,CAAC;IACDG,UAAUA,CAACb,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzBH,KAAK,CAACH,aAAa,EAAE;MACrB,MAAMO,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DO,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;MACzB,IAAIA,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC/BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACoB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MACxE;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMO,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACN3B,SAAS,CAAC4B,eAAe,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBZ,KAAK,EAAE,YAAY;MACnBa,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BJ,QAAQ,CACN3B,SAAS,CAAC4B,eAAe,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBZ,KAAK,EAAE,YAAY;QACnBa,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qGAAqG,EACrG;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAAE,CAAC,CAC9C;MACD,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IACjE,CAAC;IACD,IAAI;MACF,MAAMR,QAAQ;IAChB,CAAC,CAAC,OAAOS,KAAK,EAAE,CAAC;IAEjB,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;IAClCf,QAAQ,CACN3B,SAAS,CAAC4B,eAAe,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBZ,KAAK,EAAE,SAAS;MAChBa,OAAO,EAAE;IACX,CAAC,CAAC,CACH;EACH,CAAC;AACH,CAAC;AAED,OAAO,MAAMa,WAAW,GAAG1C,SAAS,CAAC2C,OAAO;AAE5C,eAAe3C,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}