{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aneshs\\\\Documents\\\\GitHub\\\\React\\\\react_redux-counter_app\\\\src\\\\components\\\\Counter.js\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\n// styles\nimport classes from \"./Counter.module.css\";\nimport { Component } from \"react\";\n\n// Functional Component\n/*\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const dispatch = useDispatch();\n\n  const actionHandler = (event) => {\n    if (event.target.id === \"increment\") {\n      dispatch({ type: \"INCREMENT\" });\n    }\n    if (event.target.id === \"decrement\") {\n      dispatch({ type: \"DECREMENT\" });\n    }\n  };\n\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div className={classes.action_container}>\n        <button\n          id=\"increment\"\n          className={classes.action_buttons}\n          onClick={actionHandler}\n        >\n          Increment\n        </button>\n        <button\n          id=\"decrement\"\n          className={classes.action_buttons}\n          onClick={actionHandler}\n        >\n          Decerement\n        </button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n*/\n\n// Class based Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  actionHandler(event) {}\n  toggleCounterHandler() {}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action_container,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"increment\",\n          className: classes.action_buttons,\n          onClick: this.actionHandler,\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"decrement\",\n          className: classes.action_buttons,\n          onClick: this.actionHandler,\n          children: \"Decerement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {};\nexport default connect()(Counter);","map":{"version":3,"names":["useSelector","useDispatch","connect","classes","Component","jsxDEV","_jsxDEV","Counter","actionHandler","event","toggleCounterHandler","render","className","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","action_container","id","action_buttons","onClick","mapStateToProps","state"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_redux-counter_app/src/components/Counter.js"],"sourcesContent":["import { useSelector, useDispatch, connect } from \"react-redux\";\n// styles\nimport classes from \"./Counter.module.css\";\nimport { Component } from \"react\";\n\n// Functional Component\n/*\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const dispatch = useDispatch();\n\n  const actionHandler = (event) => {\n    if (event.target.id === \"increment\") {\n      dispatch({ type: \"INCREMENT\" });\n    }\n    if (event.target.id === \"decrement\") {\n      dispatch({ type: \"DECREMENT\" });\n    }\n  };\n\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div className={classes.action_container}>\n        <button\n          id=\"increment\"\n          className={classes.action_buttons}\n          onClick={actionHandler}\n        >\n          Increment\n        </button>\n        <button\n          id=\"decrement\"\n          className={classes.action_buttons}\n          onClick={actionHandler}\n        >\n          Decerement\n        </button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n*/\n\n// Class based Component\n\nclass Counter extends Component {\n  actionHandler(event) {}\n\n  toggleCounterHandler() {}\n\n  render() {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{}</div>\n        <div className={classes.action_container}>\n          <button\n            id=\"increment\"\n            className={classes.action_buttons}\n            onClick={this.actionHandler}\n          >\n            Increment\n          </button>\n          <button\n            id=\"decrement\"\n            className={classes.action_buttons}\n            onClick={this.actionHandler}\n          >\n            Decerement\n          </button>\n        </div>\n        <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {};\n\nexport default connect()(Counter);\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,OAAO,QAAQ,aAAa;AAC/D;AACA,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,SAASH,SAAS,CAAC;EAC9BI,aAAaA,CAACC,KAAK,EAAE,CAAC;EAEtBC,oBAAoBA,CAAA,EAAG,CAAC;EAExBC,MAAMA,CAAA,EAAG;IACP,oBACEL,OAAA;MAAMM,SAAS,EAAET,OAAO,CAACU,OAAQ;MAAAC,QAAA,gBAC/BR,OAAA;QAAAQ,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtBZ,OAAA;QAAKM,SAAS,EAAET,OAAO,CAACgB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACvCZ,OAAA;QAAKM,SAAS,EAAET,OAAO,CAACiB,gBAAiB;QAAAN,QAAA,gBACvCR,OAAA;UACEe,EAAE,EAAC,WAAW;UACdT,SAAS,EAAET,OAAO,CAACmB,cAAe;UAClCC,OAAO,EAAE,IAAI,CAACf,aAAc;UAAAM,QAAA,EAC7B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACTZ,OAAA;UACEe,EAAE,EAAC,WAAW;UACdT,SAAS,EAAET,OAAO,CAACmB,cAAe;UAClCC,OAAO,EAAE,IAAI,CAACf,aAAc;UAAAM,QAAA,EAC7B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eACNZ,OAAA;QAAQiB,OAAO,EAAE,IAAI,CAACb,oBAAqB;QAAAI,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9D;EAEX;AACF;AAEA,MAAMM,eAAe,GAAIC,KAAK,IAAK,CAAC,CAAC;AAErC,eAAevB,OAAO,EAAE,CAACK,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}