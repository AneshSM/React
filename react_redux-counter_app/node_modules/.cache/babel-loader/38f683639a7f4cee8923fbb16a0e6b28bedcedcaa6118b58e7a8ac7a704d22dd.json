{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: false\n};\nconst couunterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n/*\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"INCREMENT\")\r\n    return { counter: state.counter + 1, showCounter: state.showCounter };\r\n  if (action.type === \"DECREMENT\")\r\n    return { counter: state.counter - 1, showCounter: state.showCounter };\r\n  if (action.type === \"INCREASE-BY-AMOUNT\")\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  if (action.type === \"TOGGLE\") {\r\n    return { showCounter: !state.showCounter, counter: state.counter };\r\n  }\r\n  return state;\r\n};\r\n*/\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","couunterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggle","store","counterReducer"],"sources":["C:/Users/aneshs/Documents/GitHub/React/react_redux-counter_app/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: false };\r\n\r\nconst couunterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter += action.amount;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n/*\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"INCREMENT\")\r\n    return { counter: state.counter + 1, showCounter: state.showCounter };\r\n  if (action.type === \"DECREMENT\")\r\n    return { counter: state.counter - 1, showCounter: state.showCounter };\r\n  if (action.type === \"INCREASE-BY-AMOUNT\")\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  if (action.type === \"TOGGLE\") {\r\n    return { showCounter: !state.showCounter, counter: state.counter };\r\n  }\r\n  return state;\r\n};\r\n*/\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAM,CAAC;AAEvD,MAAMC,aAAa,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,IAAIS,MAAM,CAACC,MAAM;IAChC,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGf,WAAW,CAACgB,cAAc,CAAC;AAEzC,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}